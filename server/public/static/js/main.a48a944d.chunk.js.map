{"version":3,"sources":["app.module.css","components/windowBody/windowBody.module.css","modules/sharedActions.ts","modules/currentStroke/slice.ts","ItemTypes.ts","modules/selectors.ts","components/colorPanel/colorPanel.tsx","modules/historyIndex/slice.ts","components/editPanel/editPanel.tsx","utils/cavasUtils.ts","canvasContext.tsx","modules/modal/slice.ts","api.ts","modules/projects/slice.ts","components/filePanel/filePanel.tsx","components/canvas/canvas.tsx","components/ProjectModal/index.tsx","utils/thumbnail.ts","components/ProjectSaveModal/index.tsx","components/modalManage/index.tsx","components/windowBody/windowBody.tsx","App.tsx","modules/strokes/slice.ts","store.ts","index.tsx"],"names":["module","exports","endStroke","createAction","reset","setStrokes","initialState","points","color","currentStroke","createSlice","name","reducers","startStroke","state","action","push","payload","updateStroke","setColor","extraReducers","builder","addCase","actions","ItemTypes","currentStrokeSelector","historyIndexSelector","historyIndex","strokesSelector","strokes","modalVisibleSelector","modalVisible","projectsSelector","projects","COLORS","ColorPanel","left","top","useSelector","dispatch","useDispatch","useDrag","type","item","collect","monitor","isDragging","drag","ref","className","style","map","onClick","onColorChange","classNames","active","backgroundColor","undo","Math","min","redo","max","EditPanel","length","drawStroke","context","strokeStyle","beginPath","moveTo","x","y","forEach","point","lineTo","stroke","closePath","clearCanvas","canvas","fillStyle","fillRect","width","height","getCanvasImage","a","Promise","resolve","reject","toBlob","CanvasContext","createContext","CanvasProvider","children","useRef","Provider","value","useCanvas","useContext","modal","isShown","modalName","show","hide","API_URL","process","createProject","image","fetch","method","headers","Accepet","body","JSON","stringify","then","res","json","getProjectsThunk","createAsyncThunk","params","rejectWithValue","pendding","error","fulfilled","rejected","pending","FilePanel","canvasRef","exportToFile","current","blob","saveAs","Canvas","isDrawing","endDrawing","getCanvasWithContext","useCallback","getContext","useEffect","setCanvasSize","lineJoin","lineCap","lineWidth","requestAnimationFrame","slice","styles","onMouseDown","nativeEvent","offsetX","offsetY","onMouseUp","onMouseOut","onMouseMove","ProjectModal","modalRef","handleOutsideClick","e","contains","target","document","addEventListener","removeEventListener","aria-label","project","src","alt","id","find","p","handleThumbnailClick","getBase64Thumbnail","file","scale","reader","FileReader","readAsDataURL","onload","img","Image","el","createElement","w","h","ctx","drawImage","toDataURL","result","onerror","err","toString","ProjectSaveModal","useState","projectName","setProjectName","handleSave","success","console","log","htmlFor","onChange","ModalManage","WindowBody","colorOffset","setColorOffset","editOffset","setEditOffset","fileOffset","setFileOffset","useDrop","accept","drop","getDifferenceFromInitialOffset","delta","round","App","container","reducer","splice","store","configureStore","middleware","getDefaultMiddleware","concat","logger","devTools","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,2B,6QCEZC,EAAYC,YAGtB,aAEUC,EAAQD,YAAa,SAErBE,EAAaF,YAAuB,cCN3CG,EAAuB,CAC3BC,OAAQ,GACRC,MAAO,QAGIC,EAAgBC,YAAY,CACvCC,KAAM,gBACNL,eACAM,SAAU,CACRC,YADQ,SACIC,EAAOC,GACjBD,EAAMP,OAAOS,KAAKD,EAAOE,UAE3BC,aAJQ,SAIKJ,EAAOC,GAClBD,EAAMP,OAAOS,KAAKD,EAAOE,UAE3BE,SAPQ,SAOCL,EAAOC,GACdD,EAAMN,MAAQO,EAAOE,UAGzBG,cAAe,SAAAC,GACbA,EAAQC,QAAQpB,GAAW,SAACY,GAC1BA,EAAMP,OAAS,MAEjBc,EAAQC,QAAQlB,GAAO,WACrB,OAAOE,Q,EAMwCG,EAAcc,QAArDV,E,EAAAA,YAAaK,E,EAAAA,aAAcC,E,EAAAA,SAC1BV,IAAf,Q,QCnCae,EACE,cADFA,EAEC,aAFDA,EAGC,aCFDC,EAAwB,SAACX,GAAD,OAAsBA,EAAML,eACpDiB,EAAuB,SAACZ,GAAD,OAAsBA,EAAMa,cACnDC,EAAkB,SAACd,GAAD,OAAsBA,EAAMe,SAC9CC,EAAuB,SAAChB,GAAD,OAAsBA,EAAMiB,cACnDC,EAAmB,SAAClB,GAAD,OAAsBA,EAAMmB,U,OCGtDC,EAAS,CACb,OACA,UACA,UACA,UACA,UACA,UACA,QAOa,SAASC,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,IACnC5B,EAAgB6B,YAAYb,GAC5Bc,EAAWC,cAFsC,EAMxBC,aAC7B,iBAAO,CACLC,KAAMlB,EACNmB,KAAM,CACJD,KAAMlB,EACNa,MACAD,QAEFQ,QAAS,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQC,kBAGxB,CAACT,EAAKD,IAlB+C,mBAM9CU,EAN8C,KAM9CA,WAAcC,EANgC,KAoBvD,OAAID,EAAmB,qBAAKE,IAAKD,IAE/B,sBACEE,UAAU,sBACVD,IAAKD,EACLG,MAAO,CAAEb,IAAKA,EAAM,KAAMD,KAAMA,EAAO,MAHzC,UAKE,qBAAKa,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,sBAEF,qBAAKA,UAAU,8BAAf,SACGf,EAAOiB,KAAI,SAAC3C,GAAD,OACV,qBAEE4C,QAAS,YA/BG,SAAC5C,GACrB+B,EAASpB,EAASX,IA+BR6C,CAAc7C,IAEhByC,UAAWK,IAAW,QAAS,CAC7BC,OAAQ/C,IAAUC,EAAcD,QAElC0C,MAAO,CAAEM,gBAAiBhD,IAPrBA,W,UClDJmB,EAAejB,YAAY,CACtCC,KAAM,eACNL,aAJmB,EAKnBM,SAAU,CACR6C,KADQ,SACH3C,EAAOC,GACV,OAAO2C,KAAKC,IAAI7C,EAAQ,EAAGC,EAAOE,UAEpC2C,KAJQ,SAIH9C,GACH,OAAO4C,KAAKG,IAAI/C,EAAQ,EAAG,KAG/BM,cAAe,SAACC,GACdA,EAAQC,QAAQpB,GAAW,SAACY,GAC1B,OAAO,KAETO,EAAQC,QAAQlB,GAAO,WACrB,OAlBe,KAoBjBiB,EAAQC,QAAQjB,GAAY,WAC1B,OArBe,Q,EA0BSsB,EAAaJ,QAA5BkC,E,EAAAA,KAAMG,E,EAAAA,KAENjC,IAAf,QC4BemC,EA/CG,SAAC,GAA0B,IAAxBzB,EAAuB,EAAvBA,IAAKD,EAAkB,EAAlBA,KAClBP,EAAUS,YAAYV,GACtBW,EAAWC,cAFyB,EAGXC,aAC7B,iBAAO,CACLC,KAAMlB,EACNmB,KAAM,CACJD,KAAMlB,EACNa,MACAD,QAEFQ,QAAS,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQC,kBAGxB,CAACT,EAAKD,IAfkC,mBAGjCU,EAHiC,KAGjCA,WAAcC,EAHmB,KAiB1C,OAAID,EAAmB,qBAAKE,IAAKD,IAE/B,sBACEE,UAAU,oBACVD,IAAKD,EACLG,MAAO,CAAEb,IAAKA,EAAM,KAAMD,KAAMA,EAAO,MAHzC,UAKE,qBAAKa,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,oBAEF,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,wBACEA,UAAU,cACVG,QAAS,kBAAMb,EAASkB,EAAK5B,EAAQkC,UAFvC,kBAMA,wBAAQd,UAAU,cAAcG,QAAS,kBAAMb,EAASqB,MAAxD,kBAGA,wBAAQX,UAAU,eAAeG,QAAS,kBAAMb,EAASnC,MAAzD,4B,wCChDG4D,EAAa,SACxBC,EACA1D,EACAC,GAEKD,EAAOwD,SACZE,EAAQC,YAAc1D,EACtByD,EAAQE,YACRF,EAAQG,OAAO7D,EAAO,GAAG8D,EAAG9D,EAAO,GAAG+D,GACtC/D,EAAOgE,SAAQ,SAACC,GACdP,EAAQQ,OAAOD,EAAMH,EAAGG,EAAMF,GAC9BL,EAAQS,YAEVT,EAAQU,cAYGC,EAAc,SACzBC,EACAZ,GAEAA,EAAQa,UAAY,OACpBb,EAAQc,SAAS,EAAG,EAAGF,EAAOG,MAAOH,EAAOI,SAGjCC,EAAc,uCAAG,WAC5BL,GAD4B,SAAAM,EAAA,+EAGrB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAKT,EACH,OAAOS,EAAO,MAEhBT,EAAOU,OAAOF,OAPY,2CAAH,sDC3BdG,EAAgBC,wBAC3B,IAEWC,EAAiB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACzB3C,EAAM4C,iBAA0B,MACtC,OACE,cAACJ,EAAcK,SAAf,CAAwBC,MAAO9C,EAA/B,SACG2C,KAKMI,EAAY,WACvB,OAAOC,qBAAWR,ICbdS,GAAQvF,YAAY,CACxBC,KAAM,QACNL,aAP+B,CAC/B4F,SAAS,EACTC,UAAW,MAMXvF,SAAU,CACRwF,KADQ,SACHtF,EAAOC,GACVD,EAAMoF,SAAU,EAChBpF,EAAMqF,UAAYpF,EAAOE,SAE3BoF,KALQ,WAMN,MAAO,CACLH,SAAS,EACTC,UAAW,UAMJF,MAAf,Q,GAC8BA,GAAM1E,QAArB6E,G,GAAAA,KAAMC,G,GAAAA,KCxBfC,GAAUC,kCAEHC,GAAgB,SAC3B7F,EACAkB,EACA4E,GAEA,OAAOC,MAAM,GAAD,OAAIJ,GAAJ,iBAA4B,CACtCK,OAAQ,OACRC,QAAS,CACPC,QAAS,mBACT,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBrG,OACAkB,UACA4E,YAEDQ,MAAK,SAACC,GAAD,OAASA,EAAIC,WCEVC,GAAmBC,YAC9B,sBAD8C,uCAE9C,WAAOC,EAAP,oBAAAnC,EAAA,6DAAiBoC,EAAjB,EAAiBA,gBAAjB,kBDGAb,MAAM,GAAD,OAAIJ,GAAJ,mBAA6BW,MAAK,SAACC,GAAD,OAASA,EAAIC,UCHpD,cAEUD,EAFV,yBAGWA,GAHX,yDAKWK,EAAgB,UAL3B,yDAF8C,yDA+BjCtF,GAnBSvB,YAAY,CAClCC,KAAM,WACNL,aApBkC,CAClCkH,UAAU,EACVC,MAAO,KACPxF,SAAU,IAkBVrB,SAAU,GACVQ,cAAe,SAACC,GACdA,EAAQC,QAAQ8F,GAAiBM,WAAW,SAAC5G,EAAOC,GAClDD,EAAM0G,UAAW,EACjB1G,EAAMmB,SAAWlB,EAAOE,WAE1BI,EAAQC,QAAQ8F,GAAiBO,UAAU,SAAC7G,EAAOC,GACjDD,EAAM0G,UAAW,EACjB1G,EAAM2G,MAAQ1G,EAAOE,WAEvBI,EAAQC,QAAQ8F,GAAiBQ,SAAS,SAAC9G,EAAOC,GAChDD,EAAM0G,UAAW,QAKvB,QCoBeK,GA3DG,SAAC,GAA0B,IAAxBxF,EAAuB,EAAvBA,IAAKD,EAAkB,EAAlBA,KAClB0F,EAAY/B,IACZxD,EAAWC,cAFyB,EAGXC,aAC7B,iBAAO,CACLC,KAAMlB,EACNmB,KAAM,CACJD,KAAMlB,EACNa,MACAD,QAEFQ,QAAS,SAACC,GAAD,MAAc,CACrBC,WAAYD,EAAQC,kBAGxB,CAACT,EAAKD,IAfkC,mBAGjCU,EAHiC,KAGjCA,WAAcC,EAHmB,KAkBpCgF,EAAY,uCAAG,4BAAA5C,EAAA,sEACAD,EAAe4C,EAAUE,SADzB,UACbC,EADa,wDAGnBC,iBAAOD,EAAM,eAHM,2CAAH,qDAWlB,OAAInF,EAAmB,qBAAKE,IAAKD,IAE/B,sBACEE,UAAU,oBACVD,IAAKD,EACLG,MAAO,CAAEb,IAAKA,EAAM,KAAMD,KAAMA,EAAO,MAHzC,UAKE,qBAAKa,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,oBAEF,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAeG,QAAS2E,EAA1C,oBAGA,wBAAQ9E,UAAU,SAASG,QApBX,WACtBb,EAAS6D,GAAK,kBACd7D,EAAS6E,OAkBH,kBAGA,wBACEnE,UAAU,SACVG,QAAS,kBAAMb,EAAS6D,GAAK,wBAF/B,2B,6BCwCK+B,GApFA,WACb,IAAML,EAAY/B,IACZtF,EAAgB6B,YAAYb,GAC5BE,EAAeW,YAAYZ,GAC3BG,EAAUS,YAAYV,GAEtBwG,IAAc3H,EAAcF,OAAOwD,OAEnCxB,EAAWC,cAeX6F,EAAa,WACZD,GACL7F,EAASrC,EAAU,CAACO,gBAAekB,mBAG/B2G,EAAuBC,uBAC3B,WAAiC,IAAhC1D,EAA+B,uDAAtBiD,EAAUE,QAClB,MAAO,CACLnD,SACAZ,QAAO,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAQ2D,WAAW,SAGhC,CAACV,IAqCH,OAjCAW,qBAAU,WAAO,IAAD,EACcH,IAApBzD,EADM,EACNA,OAAQZ,EADF,EACEA,QACXY,GAAWZ,KNxCS,SAC3BY,EACAG,EACAC,GAEAJ,EAAOG,MAAQA,EACfH,EAAOI,OAASA,EMmCdyD,CAAc7D,EA7CJ,IACC,KA6CXZ,EAAQ0E,SAAW,QACnB1E,EAAQ2E,QAAU,QAClB3E,EAAQ4E,UAAY,EACpBjE,EAAYC,EAAQZ,MACnB,CAACqE,IAGJG,qBAAU,WAAO,IACPxE,EAAYqE,IAAZrE,QACHA,GACL6E,uBAAsB,WACpB9E,EAAWC,EAASxD,EAAcF,OAAQE,EAAcD,YAEzD,CAACC,EAAe6H,IAGnBG,qBAAU,WAAO,IAAD,EACcH,IAApBzD,EADM,EACNA,OAAQZ,EADF,EACEA,QACXA,GAAYY,GAGjBiE,uBAAsB,WACpBlE,EAAYC,EAAQZ,GACpBpC,EAAQkH,MAAM,EAAGlH,EAAQkC,OAASpC,GAAc4C,SAAQ,SAACG,GACvDV,EAAWC,EAASS,EAAOnE,OAAQmE,EAAOlE,eAG7C,CAACqB,EAASF,EAAc2G,IAGzB,wBACErF,UAAW+F,KAAOnE,OAClBoE,YAjEiB,SAAC,GAEsB,IAD1CC,EACyC,EADzCA,YAEQC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB7G,EAAS1B,EAAY,CAAEwD,EAAG8E,EAAS7E,EAAG8E,MA8DpCC,UAAWhB,EACXiB,WAAYjB,EACZkB,YA7DS,SAAC,GAA0D,IAAxDL,EAAuD,EAAvDA,YACd,GAAKd,EAAL,CADqE,IAE7De,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB7G,EAASrB,EAAa,CAAEmD,EAAG8E,EAAS7E,EAAG8E,OA2DrCpG,IAAK8E,KC/BI0B,GA1DM,WACnB,IAAMvH,EAAWK,YAAYN,GACvBO,EAAWC,cACXiH,EAAW7D,iBAAuB,MACxC6C,qBAAU,WACR,IAAMiB,EAAqB,SAACC,GACtBF,EAASzB,UAAYyB,EAASzB,QAAQ4B,SAASD,EAAEE,SACnDtH,EAAS8D,OAIb,OADAyD,SAASC,iBAAiB,QAASL,GAC5B,WACLI,SAASE,oBAAoB,QAASN,MAEvC,CAACnH,IAOJ,OACE,qBAAKU,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAgBD,IAAKyG,EAApC,SACE,sBAAKxG,UAAU,SAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,qBACA,qBAAKA,UAAU,qBAAf,SACE,wBAAQgH,aAAW,QAAQ7G,QAAS,kBAAMb,EAAS8D,cAGvD,qBAAKpD,UAAU,qBAAf,SACGhB,EAASuF,SACR,6CACEvF,EAASwF,MACX,wCAEAxF,EAASA,SAASkB,KAAI,SAAC+G,GACrB,OACE,sBAAsBjH,UAAU,eAAhC,UACE,qBACEkH,IAAKD,EAAQzD,MACb2D,IAAI,YACJhH,QAAS,kBA5BA,SAACiH,GAC5B,IAAMR,EAAS5H,EAASA,SAASqI,MAAK,SAACC,GAAD,OAAOA,EAAEF,KAAOA,KACjDR,IACLtH,EAAS8D,MACT9D,EAASlC,EAAWwJ,EAAOhI,WAwBM2I,CAAqBN,EAAQG,OAE9C,8BAAMH,EAAQvJ,SANNuJ,EAAQG,iBCzC7B,SAASI,GAAT,GAG6B,IAFlCC,EAEiC,EAFjCA,KAEiC,IADjCC,aACiC,MADzB,GACyB,EACjC,OAAO,IAAIvF,SAAQ,SAACC,EAASC,GAC3B,IAAMsF,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GACrBE,EAAOG,OAAS,SAACpB,GAAO,IAAD,EACfqB,EAAM,IAAIC,MAChBD,EAAID,OAAS,WACX,IAAMG,EAAKpB,SAASqB,cAAc,UAC9BC,EAAKF,EAAGlG,MAAQgG,EAAIhG,MAAQ2F,EAC5BU,EAAKH,EAAGjG,OAAS+F,EAAI/F,OAAS0F,EAC5BW,EAAMJ,EAAG1C,WAAW,MAC1B,GAAK8C,EAEL,OADAA,EAAIC,UAAUP,EAAK,EAAG,EAAGI,EAAGC,GACrBhG,EAAQ6F,EAAGM,cAEpBR,EAAIb,IAAJ,UAAUR,EAAEE,cAAZ,aAAU,EAAU4B,QAEtBb,EAAOc,QAAU,SAACC,GAChB,OAAOrG,EAAOqG,EAAIC,gBChBxB,IA4DeC,GA5DU,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACtBC,EADsB,KACTC,EADS,KAEvBnK,EAAUS,YAAYV,GACtBW,EAAWC,cACXiH,EAAW7D,iBAAuB,MAClCkC,EAAY/B,IAClB0C,qBAAU,WACR,IAAMiB,EAAqB,SAACC,GACtBF,EAASzB,UAAYyB,EAASzB,QAAQ4B,SAASD,EAAEE,SACnDtH,EAAS8D,OAIb,OADAyD,SAASC,iBAAiB,QAASL,GAC5B,WACLI,SAASE,oBAAoB,QAASN,MAEvC,CAACnH,IAEJ,IAAM0J,EAAU,uCAAG,8BAAA9G,EAAA,yDACZ4G,EADY,iEAEE7G,EAAe4C,EAAUE,SAF3B,UAEX0C,EAFW,wEAIGD,GAAmB,CAAEC,KAAMA,EAAMC,MAAO,KAJ3C,cAIXlE,EAJW,2BAMGD,GAAcuF,EAAalK,EAAS4E,GANvC,eAOPyF,SACN3J,EAAS8D,MARI,mDAWf8F,QAAQC,IAAR,MAXe,2DAAH,qDAchB,OACE,qBAAKnJ,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAgBD,IAAKyG,EAApC,SACE,sBAAKxG,UAAU,SAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,oBAEF,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,uBAAOoJ,QAAQ,cAAf,0BACA,uBACEhC,GAAG,cACH3H,KAAK,OACL4J,SAAU,SAAC3C,GAAD,OAAOqC,EAAerC,EAAEE,OAAO/D,QACzCA,MAAOiG,OAGX,sBAAK9I,UAAU,YAAf,UACE,wBAAQG,QAAS6I,EAAjB,kBACA,wBAAQ7I,QAAS,kBAAMb,EAAS8D,OAAhC,kCCzCCkG,GAfK,WAElB,OADsBjK,YAAYR,GAA1BqE,WAEN,IAAK,gBACH,OAAO,cAAC,GAAD,IAET,IAAK,qBACH,OAAO,cAAC,GAAD,IAET,QACE,OAAO,OCkDEqG,GA5CI,WAAO,IAAD,EACeV,mBAAiB,CACrDzH,EAAG,GACHC,EAAG,MAHkB,mBAChBmI,EADgB,KACHC,EADG,OAKaZ,mBAAiB,CACnDzH,EAAG,GACHC,EAAG,KAPkB,mBAKhBqI,EALgB,KAKJC,EALI,OASad,mBAAiB,CACnDzH,EAAG,GACHC,EAAG,MAXkB,mBAShBuI,EATgB,KASJC,EATI,OAaNC,cAAQ,iBAAO,CAC9BC,OAAQ,CACNxL,EACAA,EACAA,GAEFyL,KAN8B,SAMzBtK,EAAgBE,GACnB,GAAKA,EAAQqK,iCAAb,CACA,IAAMC,EAAQtK,EAAQqK,iCAChB7I,EAAIX,KAAK0J,MAAMzK,EAAKP,KAAO+K,EAAM9I,GACjCC,EAAIZ,KAAK0J,MAAMzK,EAAKN,IAAM8K,EAAM7I,GAClC3B,EAAKD,OAASlB,EAChBkL,EAAe,CAAErI,IAAGC,MACX3B,EAAKD,OAASlB,EACvBoL,EAAc,CAAEvI,IAAGC,MACV3B,EAAKD,OAASlB,GACvBsL,EAAc,CAAEzI,IAAGC,YAhBhB2I,EAbc,oBAiCvB,OACE,sBAAKhK,UAAWK,IAAW,cAAe0F,IAAOlC,MAAO9D,IAAKiK,EAA7D,UACE,cAAC9K,EAAD,CAAYE,IAAKoK,EAAYnI,EAAGlC,KAAMqK,EAAYpI,IAClD,cAAC,EAAD,CAAWhC,IAAKsK,EAAWrI,EAAGlC,KAAMuK,EAAWtI,IAC/C,cAAC,GAAD,CAAWhC,IAAKwK,EAAWvI,EAAGlC,KAAMyK,EAAWxI,IAC/C,cAAC,GAAD,IACA,cAAC,GAAD,QCxCSgJ,OAhBf,WACE,OACE,sBAAKpK,UAAWK,IAAW,SAAU0F,IAAOsE,WAA5C,UACE,sBAAKrK,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,2BACA,sBAAKA,UAAU,qBAAf,UACE,wBAAQgH,aAAW,aACnB,wBAAQA,aAAW,aACnB,wBAAQA,aAAW,gBAGvB,cAAC,GAAD,Q,SCXA3J,GAAyB,GCMzBiN,GAAU,CACd9M,gBACAkB,eACAE,QDPqBnB,YAAY,CACjCC,KAAM,UACNL,gBACAM,SAAU,GACVQ,cAAe,SAACC,GACdA,EAAQC,QAAQpB,GAAW,SAACY,EAAOC,GACG,IAAhCA,EAAOE,QAAQU,aAInBb,EAAM0M,QACHzM,EAAOE,QAAQU,aAChBZ,EAAOE,QAAQU,aACfZ,EAAOE,QAAQR,eANfK,EAAME,KAAKD,EAAOE,QAAQR,kBAS9BY,EAAQC,QAAQlB,GAAO,WACrB,OAAOE,MAETe,EAAQC,QAAQjB,GAAY,SAACS,EAAOC,GAClC,OAAOA,EAAOE,cAKpB,QCjBEc,gBACAE,aAGWwL,GAAQC,YAAe,CAClCH,WACAI,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOC,YACpEC,UAAUxH,I,kBCZZyH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAACU,GAAA,EAAD,CAAaC,QAASC,KAAtB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,YAKRvE,SAASwE,eAAe,W","file":"static/js/main.a48a944d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"windowBody_body__1e9lm\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { Stroke } from \"../types\";\n\nexport const endStroke = createAction<{\n  currentStroke: Stroke;\n  historyIndex: number;\n}>(\"endStroke\");\n\nexport const reset = createAction(\"reset\");\n\nexport const setStrokes = createAction<Stroke[]>('setStrokes')\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Point, Stroke } from \"../../types\";\nimport { endStroke , reset} from \"../sharedActions\";\n\nconst initialState: Stroke = {\n  points: [],\n  color: \"#000\",\n};\n\nexport const currentStroke = createSlice({\n  name: \"currentStroke\",\n  initialState,\n  reducers: {\n    startStroke(state, action: PayloadAction<Point>) {\n      state.points.push(action.payload);\n    },\n    updateStroke(state, action: PayloadAction<Point>) {\n      state.points.push(action.payload);\n    },\n    setColor(state, action:PayloadAction<string>) {\n      state.color = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(endStroke, (state) => {\n      state.points = []\n    })\n    builder.addCase(reset, () => {\n      return initialState\n    })\n  }\n});\n\n\nexport const {startStroke, updateStroke, setColor} = currentStroke.actions\nexport default currentStroke.reducer\n","export const ItemTypes = {\n  COLOR_PANEL: 'COLOR_PANEL',\n  EDIT_PANEL: 'EDIT_PANEL',\n  FILE_PANEL: 'FILE_PANEL'\n}","import { RootState } from \"../types\";\nexport const currentStrokeSelector = (state: RootState) => state.currentStroke;\nexport const historyIndexSelector = (state: RootState) => state.historyIndex;\nexport const strokesSelector = (state: RootState) => state.strokes;\nexport const modalVisibleSelector = (state: RootState) => state.modalVisible;\nexport const projectsSelector = (state: RootState) => state.projects;\n","import \"./colorPanel.css\";\nimport classNames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setColor } from \"../../modules/currentStroke/slice\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../../ItemTypes\";\nimport {currentStrokeSelector} from '../../modules/selectors'\n\nconst COLORS = [\n  \"#000\",\n  \"#264653\",\n  \"#2a9d8f\",\n  \"#e9c46a\",\n  \"#f4a261\",\n  \"#e76f51\",\n  \"#fff\",\n];\n\ntype Props = {\n  left: number;\n  top: number;\n};\nexport default function ColorPanel({ left, top }: Props) {\n  const currentStroke = useSelector(currentStrokeSelector)\n  const dispatch = useDispatch();\n  const onColorChange = (color: string) => {\n    dispatch(setColor(color));\n  };\n  const [{ isDragging }, drag] = useDrag(\n    () => ({\n      type: ItemTypes.COLOR_PANEL,\n      item: {\n        type: ItemTypes.COLOR_PANEL,\n        top,\n        left,\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [top, left]\n  );\n  if (isDragging) return <div ref={drag} />;\n  return (\n    <div\n      className=\"window colors-panel\"\n      ref={drag}\n      style={{ top: top + \"px\", left: left + \"px\" }}\n    >\n      <div className=\"title-bar\">\n        <div className=\"title-bar-text\">Colors</div>\n      </div>\n      <div className=\"window-body color-container\">\n        {COLORS.map((color: string) => (\n          <div\n            key={color}\n            onClick={() => {\n              onColorChange(color);\n            }}\n            className={classNames(\"color\", {\n              active: color === currentStroke.color,\n            })}\n            style={{ backgroundColor: color }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { endStroke, reset, setStrokes } from \"../sharedActions\";\n\nconst initialState = 0;\n\nexport const historyIndex = createSlice({\n  name: \"historyIndex\",\n  initialState,\n  reducers: {\n    undo(state, action: PayloadAction<number>) {\n      return Math.min(state + 1, action.payload);\n    },\n    redo(state) {\n      return Math.max(state - 1, 0);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(endStroke, (state) => {\n      return 0;\n    });\n    builder.addCase(reset, () => {\n      return initialState;\n    });\n    builder.addCase(setStrokes, () => {\n      return initialState\n    })\n  },\n});\n\nexport const { undo, redo } = historyIndex.actions;\n\nexport default historyIndex.reducer;\n","import \"./editPanel.css\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../../ItemTypes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { redo, undo } from \"../../modules/historyIndex/slice\";\nimport { reset } from \"../../modules/sharedActions\";\nimport { strokesSelector } from \"../../modules/selectors\";\ntype Props = {\n  top: number;\n  left: number;\n};\n\nconst EditPanel = ({ top, left }: Props) => {\n  const strokes = useSelector(strokesSelector);\n  const dispatch = useDispatch();\n  const [{ isDragging }, drag] = useDrag(\n    () => ({\n      type: ItemTypes.EDIT_PANEL,\n      item: {\n        type: ItemTypes.EDIT_PANEL,\n        top,\n        left,\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [top, left]\n  );\n  if (isDragging) return <div ref={drag} />;\n  return (\n    <div\n      className=\"window edit-panel\"\n      ref={drag}\n      style={{ top: top + \"px\", left: left + \"px\" }}\n    >\n      <div className=\"title-bar\">\n        <div className=\"title-bar-text\">Edit</div>\n      </div>\n      <div className=\"window-body\">\n        <div className=\"field-row\">\n          <button\n            className=\"button redo\"\n            onClick={() => dispatch(undo(strokes.length))}\n          >\n            Undo\n          </button>\n          <button className=\"button undo\" onClick={() => dispatch(redo())}>\n            Redo\n          </button>\n          <button className=\"button clear\" onClick={() => dispatch(reset())}>\n            Clear\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditPanel;\n","import { Point } from \"../types\";\n\nexport const drawStroke = (\n  context: CanvasRenderingContext2D,\n  points: Point[],\n  color: string\n) => {\n  if (!points.length) return;\n  context.strokeStyle = color;\n  context.beginPath();\n  context.moveTo(points[0].x, points[0].y);\n  points.forEach((point) => {\n    context.lineTo(point.x, point.y);\n    context.stroke();\n  });\n  context.closePath();\n};\n\nexport const setCanvasSize = (\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number\n) => {\n  canvas.width = width;\n  canvas.height = height;\n};\n\nexport const clearCanvas = (\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) => {\n  context.fillStyle = \"#fff\";\n  context.fillRect(0, 0, canvas.width, canvas.height);\n};\n\nexport const getCanvasImage = async (\n  canvas: HTMLCanvasElement | null\n): Promise<null | Blob> => {\n  return new Promise((resolve, reject) => {\n    if (!canvas) {\n      return reject(null);\n    }\n    canvas.toBlob(resolve);\n  });\n};\n","import {\n  createContext,\n  PropsWithChildren,\n  RefObject,\n  useContext,\n  useRef,\n} from \"react\";\n\nexport const CanvasContext = createContext(\n  {} as RefObject<HTMLCanvasElement>\n);\nexport const CanvasProvider = ({ children }: PropsWithChildren<{}>) => {\n  const ref = useRef<HTMLCanvasElement>(null);\n  return (\n    <CanvasContext.Provider value={ref}>\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => {\n  return useContext(CanvasContext);\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ModalState } from \"../../types\";\n\nconst initialState: ModalState = {\n  isShown: false,\n  modalName: null,\n};\n\nconst modal = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    show(state, action: PayloadAction<string>) {\n      state.isShown = true;\n      state.modalName = action.payload;\n    },\n    hide() {\n      return {\n        isShown: false,\n        modalName: null,\n      };\n    },\n  },\n});\n\nexport default modal.reducer;\nexport const { show, hide } = modal.actions;\n","import { Stroke } from './types';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const createProject = (\n  name: string,\n  strokes: Stroke[],\n  image: string\n) => {\n  return fetch(`${API_URL}/api/projects`, {\n    method: 'POST',\n    headers: {\n      Accepet: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name,\n      strokes,\n      image,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getProject = (projectId: string) =>\n  fetch(`${API_URL}/api/projects/${projectId}`).then((res) => res.json());\n\nexport const getProjects = () =>\n  fetch(`${API_URL}/api/projects/`).then((res) => res.json());\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getProjects } from \"../../api\";\nimport { Stroke } from \"../../types\";\n\ntype Project = {\n  id: string\n  name: string;\n  strokes: Stroke[];\n  image: string;\n};\n\ntype ProjectsState = {\n  pendding: boolean;\n  error: string | null;\n  projects: Project[];\n};\nconst initialState: ProjectsState = {\n  pendding: false,\n  error: null,\n  projects: [],\n};\n\nexport const getProjectsThunk = createAsyncThunk(\n  \"products/getProduct\",\n  async (params, { rejectWithValue }) => {\n    try {\n      const res = await getProjects();\n      return res;\n    } catch (error) {\n      return rejectWithValue('error');\n    }\n  }\n);\n\nexport const projects = createSlice({\n  name: \"projects\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getProjectsThunk.fulfilled, (state, action) => {\n      state.pendding = false;\n      state.projects = action.payload\n    });\n    builder.addCase(getProjectsThunk.rejected, (state, action) => {\n      state.pendding = false;\n      state.error = action.payload as string\n    });\n    builder.addCase(getProjectsThunk.pending, (state, action) => {\n      state.pendding = true;\n    });\n  },\n});\n\nexport default projects.reducer;\n","import \"./filePanel.css\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../../ItemTypes\";\nimport { saveAs } from \"file-saver\";\nimport { getCanvasImage } from \"../../utils/cavasUtils\";\nimport { useCanvas } from \"../../canvasContext\";\nimport { show } from \"../../modules/modal/slice\";\nimport { useDispatch } from \"react-redux\";\nimport { getProjectsThunk } from \"../../modules/projects/slice\";\ntype Props = {\n  top: number;\n  left: number;\n};\n\nconst FilePanel = ({ top, left }: Props) => {\n  const canvasRef = useCanvas();\n  const dispatch = useDispatch();\n  const [{ isDragging }, drag] = useDrag(\n    () => ({\n      type: ItemTypes.FILE_PANEL,\n      item: {\n        type: ItemTypes.FILE_PANEL,\n        top,\n        left,\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [top, left]\n  );\n\n  const exportToFile = async () => {\n    const blob = await getCanvasImage(canvasRef.current);\n    if (!blob) return;\n    saveAs(blob, \"drawing.png\");\n  };\n\n  const handleLoadClick = () => {\n    dispatch(show(\"PROJECT_MODAL\"));\n    dispatch(getProjectsThunk());\n  };\n\n  if (isDragging) return <div ref={drag} />;\n  return (\n    <div\n      className=\"window file-panel\"\n      ref={drag}\n      style={{ top: top + \"px\", left: left + \"px\" }}\n    >\n      <div className=\"title-bar\">\n        <div className=\"title-bar-text\">File</div>\n      </div>\n      <div className=\"window-body\">\n        <div className=\"field-row\">\n          <button className=\"button clear\" onClick={exportToFile}>\n            Export\n          </button>\n          <button className=\"button\" onClick={handleLoadClick}>\n            Load\n          </button>\n          <button\n            className=\"button\"\n            onClick={() => dispatch(show(\"PROJECT_SAVE_MODAL\"))}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilePanel;\n","import styles from \"./canvas.module.css\";\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  currentStrokeSelector,\n  historyIndexSelector,\n  strokesSelector,\n} from \"../../modules/selectors\";\nimport { startStroke, updateStroke } from \"../../modules/currentStroke/slice\";\nimport { endStroke } from \"../../modules/sharedActions\";\nimport { clearCanvas, drawStroke, setCanvasSize } from \"../../utils/cavasUtils\";\nimport { useCanvas } from \"../../canvasContext\";\n\nconst WIDTH = 960;\nconst HEIGHT = 540;\n\nconst Canvas = () => {\n  const canvasRef = useCanvas();\n  const currentStroke = useSelector(currentStrokeSelector);\n  const historyIndex = useSelector(historyIndexSelector);\n  const strokes = useSelector(strokesSelector);\n\n  const isDrawing = !!currentStroke.points.length;\n\n  const dispatch = useDispatch();\n\n  const startDrawing = ({\n    nativeEvent,\n  }: React.MouseEvent<HTMLCanvasElement>) => {\n    const { offsetX, offsetY } = nativeEvent;\n    dispatch(startStroke({ x: offsetX, y: offsetY }));\n  };\n\n  const draw = ({ nativeEvent }: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = nativeEvent;\n    dispatch(updateStroke({ x: offsetX, y: offsetY }));\n  };\n\n  const endDrawing = () => {\n    if (!isDrawing) return;\n    dispatch(endStroke({currentStroke, historyIndex}));\n  };\n\n  const getCanvasWithContext = useCallback(\n    (canvas = canvasRef.current) => {\n      return {\n        canvas,\n        context: canvas?.getContext(\"2d\"),\n      };\n    },\n    [canvasRef]\n  );\n\n  // 初始化canvas\n  useEffect(() => {\n    const { canvas, context } = getCanvasWithContext();\n    if (!canvas || !context) return;\n    setCanvasSize(canvas, WIDTH, HEIGHT);\n    context.lineJoin = \"round\";\n    context.lineCap = \"round\";\n    context.lineWidth = 5;\n    clearCanvas(canvas, context);\n  }, [getCanvasWithContext]);\n\n  // 绘制当前笔画\n  useEffect(() => {\n    const { context } = getCanvasWithContext();\n    if (!context) return;\n    requestAnimationFrame(() => {\n      drawStroke(context, currentStroke.points, currentStroke.color);\n    });\n  }, [currentStroke, getCanvasWithContext]);\n\n  // 历史记录变化后清空画布重新绘制\n  useEffect(() => {\n    const { canvas, context } = getCanvasWithContext();\n    if (!context || !canvas) {\n      return;\n    }\n    requestAnimationFrame(() => {\n      clearCanvas(canvas, context);\n      strokes.slice(0, strokes.length - historyIndex).forEach((stroke) => {\n        drawStroke(context, stroke.points, stroke.color);\n      });\n    });\n  }, [strokes, historyIndex, getCanvasWithContext]);\n\n  return (\n    <canvas\n      className={styles.canvas}\n      onMouseDown={startDrawing}\n      onMouseUp={endDrawing}\n      onMouseOut={endDrawing}\n      onMouseMove={draw}\n      ref={canvasRef}\n    />\n  );\n};\n\nexport default Canvas;\n","import { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hide } from \"../../modules/modal/slice\";\nimport { useEffect } from \"react\";\nimport { projectsSelector } from \"../../modules/selectors\";\nimport {  setStrokes } from \"../../modules/sharedActions\";\n\nconst ProjectModal = () => {\n  const projects = useSelector(projectsSelector);\n  const dispatch = useDispatch();\n  const modalRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const handleOutsideClick = (e: Event) => {\n      if (modalRef.current && !modalRef.current.contains(e.target as Node)) {\n        dispatch(hide());\n      }\n    };\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick);\n    };\n  }, [dispatch]);\n  const handleThumbnailClick = (id: string) => {\n    const target = projects.projects.find((p) => p.id === id);\n    if (!target) return;\n    dispatch(hide());\n    dispatch(setStrokes(target.strokes));\n  };\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\" ref={modalRef}>\n        <div className=\"window\">\n          <div className=\"title-bar\">\n            <div className=\"title-bar-text\">Counter</div>\n            <div className=\"title-bar-controls\">\n              <button aria-label=\"Close\" onClick={() => dispatch(hide())} />\n            </div>\n          </div>\n          <div className=\"projects-container\">\n            {projects.pendding ? (\n              <div>loading...</div>\n            ) : projects.error ? (\n              <div>error</div>\n            ) : (\n              projects.projects.map((project) => {\n                return (\n                  <div key={project.id} className=\"project-card\">\n                    <img\n                      src={project.image}\n                      alt=\"thumbnail\"\n                      onClick={() => handleThumbnailClick(project.id)}\n                    />\n                    <div>{project.name}</div>\n                  </div>\n                );\n              })\n            )}\n            {}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectModal;\n","type ThumbnailArgs = {\n  file: Blob;\n  scale: number;\n};\n\nexport function getBase64Thumbnail({\n  file,\n  scale = 0.1,\n}: ThumbnailArgs): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (e) => {\n      const img = new Image();\n      img.onload = () => {\n        const el = document.createElement(\"canvas\");\n        let w = (el.width = img.width * scale);\n        let h = (el.height = img.height * scale);\n        const ctx = el.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.drawImage(img, 0, 0, w, h);\n        return resolve(el.toDataURL());\n      };\n      img.src = e.target?.result as string;\n    };\n    reader.onerror = (err) => {\n      return reject(err.toString());\n    };\n  });\n}\n","import { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hide } from \"../../modules/modal/slice\";\nimport { useEffect } from \"react\";\nimport { getBase64Thumbnail } from \"../../utils/thumbnail\";\nimport { getCanvasImage } from \"../../utils/cavasUtils\";\nimport { useCanvas } from \"../../canvasContext\";\nimport { createProject } from \"../../api\";\nimport { useState } from \"react\";\nimport { strokesSelector } from \"../../modules/selectors\";\nconst ProjectSaveModal = () => {\n  const [projectName, setProjectName] = useState(\"\");\n  const strokes = useSelector(strokesSelector);\n  const dispatch = useDispatch();\n  const modalRef = useRef<HTMLDivElement>(null);\n  const canvasRef = useCanvas();\n  useEffect(() => {\n    const handleOutsideClick = (e: Event) => {\n      if (modalRef.current && !modalRef.current.contains(e.target as Node)) {\n        dispatch(hide());\n      }\n    };\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick);\n    };\n  }, [dispatch]);\n\n  const handleSave = async () => {\n    if (!projectName) return;\n    const file = await getCanvasImage(canvasRef.current);\n    if (!file) return;\n    const image = await getBase64Thumbnail({ file: file, scale: 0.2 });\n    try {\n      const res = await createProject(projectName, strokes, image);\n      if (res.success) {\n        dispatch(hide());\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\" ref={modalRef}>\n        <div className=\"window\">\n          <div className=\"title-bar\">\n            <div className=\"title-bar-text\">Save</div>\n          </div>\n          <div className=\"window-body\">\n            <div className=\"field-row-stacked\">\n              <label htmlFor=\"projectName\">Project name</label>\n              <input\n                id=\"projectName\"\n                type=\"text\"\n                onChange={(e) => setProjectName(e.target.value)}\n                value={projectName}\n              />\n            </div>\n            <div className=\"field-row\">\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => dispatch(hide())}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSaveModal;\n","import { useSelector } from \"react-redux\";\nimport { modalVisibleSelector } from \"../../modules/selectors\";\nimport ProjectModal from \"../ProjectModal\";\nimport ProjectSaveModal from \"../ProjectSaveModal\";\n\nconst ModalManage = () => {\n  const { modalName } = useSelector(modalVisibleSelector);\n  switch (modalName) {\n    case \"PROJECT_MODAL\": {\n      return <ProjectModal />;\n    }\n    case \"PROJECT_SAVE_MODAL\": {\n      return <ProjectSaveModal />;\n    }\n    default: {\n      return null;\n    }\n  }\n};\n\nexport default ModalManage;\n","import classNames from \"classnames\";\nimport styles from \"./windowBody.module.css\";\nimport ColorPanel from \"../colorPanel/colorPanel\";\nimport EditPanel from \"../editPanel/editPanel\";\nimport FilePanel from \"../filePanel/filePanel\";\nimport { useState } from \"react\";\nimport { useDrop, XYCoord } from \"react-dnd\";\nimport { ItemTypes } from \"../../ItemTypes\";\nimport Canvas from \"../canvas/canvas\";\nimport ModalManage from '../modalManage'\ntype Offset = {\n  x: number;\n  y: number;\n};\n\ntype DragItem = {\n  type: string;\n  top: number;\n  left: number;\n};\n\nconst WindowBody = () => {\n  const [colorOffset, setColorOffset] = useState<Offset>({\n    x: 30,\n    y: 200,\n  });\n  const [editOffset, setEditOffset] = useState<Offset>({\n    x: 30,\n    y: 30,\n  });\n  const [fileOffset, setFileOffset] = useState<Offset>({\n    x: 30,\n    y: 120,\n  });\n  const [, drop] = useDrop(() => ({\n    accept: [\n      ItemTypes.COLOR_PANEL,\n      ItemTypes.EDIT_PANEL,\n      ItemTypes.FILE_PANEL,\n    ],\n    drop(item: DragItem, monitor) {\n      if (!monitor.getDifferenceFromInitialOffset()) return;\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.left + delta.x);\n      const y = Math.round(item.top + delta.y);\n      if (item.type === ItemTypes.COLOR_PANEL) {\n        setColorOffset({ x, y });\n      } else if (item.type === ItemTypes.EDIT_PANEL) {\n        setEditOffset({ x, y });\n      } else if (item.type === ItemTypes.FILE_PANEL) {\n        setFileOffset({ x, y });\n      }\n    },\n  }));\n  return (\n    <div className={classNames(\"window-body\", styles.body)} ref={drop}>\n      <ColorPanel top={colorOffset.y} left={colorOffset.x} />\n      <EditPanel top={editOffset.y} left={editOffset.x} />\n      <FilePanel top={fileOffset.y} left={fileOffset.x} />\n      <Canvas />\n      <ModalManage />\n    </div>\n  );\n};\n\nexport default WindowBody;\n","import classNames from \"classnames\";\nimport styles from \"./app.module.css\";\nimport WindowBody from \"./components/windowBody/windowBody\";\n\nfunction App() {\n  return (\n    <div className={classNames(\"window\", styles.container)}>\n      <div className=\"title-bar\">\n        <div className=\"title-bar-text\">redux - piant</div>\n        <div className=\"title-bar-controls\">\n          <button aria-label=\"Minimize\"></button>\n          <button aria-label=\"Maximize\"></button>\n          <button aria-label=\"Close\"></button>\n        </div>\n      </div>\n      <WindowBody />\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Stroke } from \"../../types\";\nimport { endStroke, reset, setStrokes } from \"../sharedActions\";\n\nconst initialState: Stroke[] = [];\n\nexport const strokes = createSlice({\n  name: \"strokes\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(endStroke, (state, action) => {\n      if (action.payload.historyIndex === 0) {\n        state.push(action.payload.currentStroke);\n        return;\n      }\n      state.splice(\n        -action.payload.historyIndex,\n        action.payload.historyIndex,\n        action.payload.currentStroke\n      );\n    });\n    builder.addCase(reset, () => {\n      return initialState;\n    });\n    builder.addCase(setStrokes, (state, action) => {\n      return action.payload;\n    });\n  },\n});\n\nexport default strokes.reducer;\n","// import { rootReducer } from \"./rootReducer\";\nimport { logger } from \"redux-logger\";\nimport historyIndex from \"./modules/historyIndex/slice\";\nimport currentStroke from \"./modules/currentStroke/slice\";\nimport strokes from \"./modules/strokes/slice\";\nimport modalVisible from \"./modules/modal/slice\";\nimport projects from \"./modules/projects/slice\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst reducer = {\n  currentStroke,\n  historyIndex,\n  strokes,\n  modalVisible,\n  projects\n};\n\nexport const store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { CanvasProvider } from \"./canvasContext\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend}>\n        <CanvasProvider>\n          <App />\n        </CanvasProvider>\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}